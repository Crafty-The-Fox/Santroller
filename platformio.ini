[env]
extra_scripts = 
	pre:ardwiino_script_pre.py
	post:ardwiino_script_post.py
[micro]
build_flags = 
	-DSerial=Serial1 
	-I src/avr/micro/shared 
	-I src/avr/shared 
	-include include/LUFAConfig.h
platform = atmelavr
board = micro
framework = arduino
board_upload.detect_frequency = true
board_upload.ardwiino_bootloader = true
build_src_filter = 
	+<avr/micro/main> 
	+<avr/micro/shared>
	+<avr/shared>
	+<avr/lufa>
	+<shared>
platform_packages = 
	framework-arduino-avr @ https://github.com/sanjay900/framework-arduino-avr/archive/refs/heads/main.zip
check_skip_packages = yes
lib_ignore =
	Wire
lib_deps = 
	nrf24/RF24@1.4.5
	felis/USB-Host-Shield-20 @ ^1.6.0

[env:microdetect]
build_flags = 
	${micro.build_flags}
	-D DETECT
build_src_filter = 
	+<avr/micro/detect> 
	+<avr/micro/shared>
	+<avr/lufa>
platform = atmelavr
board = micro
framework = arduino
platform_packages = 
	framework-arduino-avr @ https://github.com/sanjay900/framework-arduino-avr/archive/refs/heads/main.zip
check_skip_packages = yes
board_upload.wait_for_upload_port = false


[env:arduino_leonardo]
board = leonardo
build_flags = ${micro.build_flags}
extends = micro

[env:arduino_micro]
build_flags = ${micro.build_flags}
extends = micro

[env:sparkfun_promicro]
board = sparkfun_promicro16
build_flags = ${micro.build_flags}
extends = micro

[env:sparkfun_promicro_8]
extends = env:sparkfun_promicro
board_upload.wait_for_upload_port = false
board_upload.detect_frequency = false
board_build.f_cpu=8000000L

[env:sparkfun_promicro_16]
extends = env:sparkfun_promicro
board_upload.wait_for_upload_port = false
board_upload.detect_frequency = false
board_build.f_cpu=16000000L

[env:arduino_micro_8]
extends = env:arduino_micro
board_upload.wait_for_upload_port = false
board_upload.detect_frequency = false
board_build.f_cpu=8000000L

[env:arduino_micro_16]
extends = env:arduino_micro
board_upload.wait_for_upload_port = false
board_upload.detect_frequency = false
board_build.f_cpu=16000000L

[env:arduino_leonardo_8]
extends = env:arduino_leonardo
board_upload.wait_for_upload_port = false
board_upload.detect_frequency = false
board_build.f_cpu=8000000L

[env:arduino_leonardo_16]
extends = env:arduino_leonardo
board_upload.wait_for_upload_port = false
board_upload.detect_frequency = false
board_build.f_cpu=16000000L


[arduino_uno_mega_usb_parent]
platform = atmelavr
board = uno
build_src_filter = 
	+<avr/uno/usb> 
	+<avr/uno/shared>
	+<avr/lufa>
platform_packages = 
	framework-arduino-avr @ https://github.com/sanjay900/framework-arduino-avr/archive/refs/heads/main.zip
check_skip_packages = yes
build_flags = 
	-DBOARD=BOARD_UNO 
	-Wl,--section-start=.data=0x800282 
	-ffixed-r2 
	-ffixed-r3
	-ffixed-r4 
	-ffixed-r5 
	-ffixed-r6 
	-flto 
	-fuse-linker-plugin
	-include include/LUFAConfig.h
upload_protocol = custom
upload_flags =
	-F
    -C
    ${platformio.packages_dir}/tool-avrdude/avrdude.conf
    -p
    ${BOARD_MCU}
    -c
    flip1
	-u
upload_command = ${platformio.packages_dir}/tool-avrdude/avrdude $UPLOAD_FLAGS -U flash:w:$SOURCE:i
lib_deps = https://github.com/sanjay900/pio-bare-lufa/archive/refs/heads/main.zip

[env:arduino_uno_usb]
extends = arduino_uno_mega_usb_parent
build_flags = 
	${arduino_uno_mega_usb_parent.build_flags}
	-DPID=0x0001
board_upload.detect_controller = true

[env:arduino_mega_2560_usb]
extends = arduino_uno_mega_usb_parent
build_flags = 
	${arduino_uno_mega_usb_parent.build_flags}
	-DPID=0x0010
board_upload.detect_controller = true

[env:arduino_mega_adk_usb]
extends = arduino_uno_mega_usb_parent
build_flags = 
	${arduino_uno_mega_usb_parent.build_flags}
	-DPID=0x003f
board_upload.detect_controller = true

[uno]
build_flags = 
	-I src/avr/uno/shared
	-I src/avr/shared 
platform = atmelavr
framework = arduino
build_src_filter = 
	+<avr/uno/main> 
	+<avr/uno/shared>
	+<avr/shared>
	+<shared>
check_skip_packages = yes
lib_ignore =
	Wire
lib_deps = 
	nrf24/RF24@1.4.5
	sukkopera/PsxNewLib@^0.4.0
	felis/USB-Host-Shield-20 @ ^1.6.0

[env:minidetect]
platform = atmelavr
framework = arduino
board = pro16MHzatmega328
build_src_filter = 
	+<avr/mini/detect>

[mini]
build_flags = 
	-I src/avr/shared 
	-D RF_ONLY
extends = uno
build_src_filter = 
	+<avr/mini/main> 
	+<avr/shared>
	+<shared>
	-<shared/usb>

[env:arduino_uno]
extends = uno
board = uno

[env:arduino_mini]
board_upload.detect_frequency_mini = true
extends = mini
board = pro8MHzatmega328

[env:arduino_mini_8]
extends = mini
board = pro8MHzatmega328

[env:arduino_mini_16]
extends = mini
board = pro16MHzatmega328

[env:arduino_mega]
extends = uno
build_flags = 
	${uno.build_flags} 
	-DUSART_RX_vect=USART1_RX_vect 
	-DUSART_UDRE_vect=USART1_UDRE_vect
board = megaatmega1280

[env:arduino_mega_2560]
extends = uno
build_flags = 
	${uno.build_flags} 
	-DUSART_RX_vect=USART1_RX_vect 
	-DUSART_UDRE_vect=USART1_UDRE_vect
board = megaatmega2560

[env:arduino_mega_adk]
extends = uno
build_flags = 
	${uno.build_flags} 
	-DUSART_RX_vect=USART1_RX_vect 
	-DUSART_UDRE_vect=USART1_UDRE_vect
board = megaADK

; Raspberry Pi Pico boards
[pico_parent]
board_upload.ardwiino_bootloader_teensy = true
board_build.use_usb = 1
platform = https://github.com/maxgerhardt/platform-raspberrypi/archive/refs/heads/develop.zip
platform_packages =
   framework-arduinopico@https://github.com/sanjay900/arduino-pico/releases/download/3.0.8-sanjay/rp2040-3.0.8-sanjay.zip
   toolchain-rp2040-earlephilhower@5.100300.230216
board = pico
framework = arduino
board_build.core = earlephilhower
debug_tool = picoprobe
; upload_protocol=picoprobe
build_flags = 
	-DPIO_USB_DP_PIN_DEFAULT=20
	-Isrc/pico 
	-DPIO_FRAMEWORK_ARDUINO_NO_USB
lib_ignore =
	Wire
build_src_filter = 
	+<pico>
	+<shared>
lib_deps = 
	nrf24/RF24@1.4.5
	https://github.com/sanjay900/USB_Host_Shield_2.0/archive/refs/heads/master.zip
	SPI
[pico]
extends = pico_parent
platform_packages =
   tool-openocd-rp2040-earlephilhower@file://pio_packages/empty2
   tool-mklittlefs-rp2040-earlephilhower@file://pio_packages/empty2
   ${pico_parent.platform_packages}

[env:pico]
extends = pico
upload_protocol=mbed
board_upload.use_1200bps_touch=False

[env:picow]
extends = pico
board = rpipicow
upload_protocol=mbed
board_upload.use_1200bps_touch=False
build_flags = 
	-DPIO_FRAMEWORK_ARDUINO_ENABLE_BLUETOOTH=1
	-DENABLE_BLE
	${pico.build_flags}

[env:pico_debug]
extends = pico_parent
build_flags = 
	-DDEBUG_RP2040_PORT=Serial1
	${pico.build_flags}

[env:picow_debug]
extends = pico_parent
board = rpipicow
build_flags = 
	-DDEBUG_RP2040_PORT=Serial1
	${env:picow.build_flags}

; rp2040 based boards
[env:0xcb_helios]
extends = pico
board = 0xcb_helios

[env:adafruit_feather]
extends = pico
board = adafruit_feather

[env:adafruit_feather_scorpio]
extends = pico
board = adafruit_feather_scorpio

[env:adafruit_itsybitsy]
extends = pico
board = adafruit_itsybitsy

[env:adafruit_qtpy]
extends = pico
board = adafruit_qtpy

[env:adafruit_stemmafriend]
extends = pico
board = adafruit_stemmafriend

[env:adafruit_trinkeyrp2040qt]
extends = pico
board = adafruit_trinkeyrp2040qt

[env:adafruit_macropad2040]
extends = pico
board = adafruit_macropad2040

[env:adafruit_kb2040]
extends = pico
board = adafruit_kb2040

[env:arduino_nano_connect]
extends = pico
board = arduino_nano_connect

[env:bridgetek_idm2040-7a]
extends = pico
board = bridgetek_idm2040-7a

[env:cytron_maker_nano_rp2040]
extends = pico
board = cytron_maker_nano_rp2040

[env:cytron_maker_pi_rp2040]
extends = pico
board = cytron_maker_pi_rp2040

[env:datanoisetv_picoadk]
extends = pico
board = datanoisetv_picoadk

[env:flyboard2040_core]
extends = pico
board = flyboard2040_core

[env:dfrobot_beetle_rp2040]
extends = pico
board = dfrobot_beetle_rp2040

[env:electroniccats_huntercat_nfc]
extends = pico
board = electroniccats_huntercat_nfc
build_flags = 
	-DDEBUG_RP2040_PORT=Serial1
	-DPIN_SPI1_MISO=PIN_SPI0_MISO
	-DPIN_SPI1_SS=PIN_SPI0_SS
	-DPIN_SPI1_SCK=PIN_SPI0_SCK
	-DPIN_SPI1_MOSI=PIN_SPI0_MOSI
	${pico.build_flags}

[env:extelec_rc2040]
extends = pico
board = extelec_rc2040

[env:challenger_2040_lte]
extends = pico
board = challenger_2040_lte

[env:challenger_2040_lora]
extends = pico
board = challenger_2040_lora

[env:challenger_2040_subghz]
extends = pico
board = challenger_2040_subghz

[env:challenger_2040_wifi]
extends = pico
board = challenger_2040_wifi

[env:challenger_2040_wifi_ble]
extends = pico
board = challenger_2040_wifi_ble

[env:challenger_nb_2040_wifi]
extends = pico
board = challenger_nb_2040_wifi

[env:challenger_2040_sdrtc]
extends = pico
board = challenger_2040_sdrtc

[env:challenger_2040_nfc]
extends = pico
board = challenger_2040_nfc
build_flags = 
	-DDEBUG_RP2040_PORT=Serial1
	-DPIN_SPI1_MISO=PIN_SPI0_MISO
	-DPIN_SPI1_SS=PIN_SPI0_SS
	-DPIN_SPI1_SCK=PIN_SPI0_SCK
	-DPIN_SPI1_MOSI=PIN_SPI0_MOSI
	${pico.build_flags}

[env:ilabs_rpico32]
extends = pico
board = ilabs_rpico32

[env:melopero_cookie_rp2040]
extends = pico
board = melopero_cookie_rp2040

[env:melopero_shake_rp2040]
extends = pico
board = melopero_shake_rp2040

[env:nullbits_bit_c_pro]
extends = pico
board = nullbits_bit_c_pro

[env:pimoroni_pga2040]
extends = pico
board = pimoroni_pga2040

[env:solderparty_rp2040_stamp]
extends = pico
board = solderparty_rp2040_stamp

[env:sparkfun_promicrorp2040]
extends = pico
board = sparkfun_promicrorp2040

[env:sparkfun_thingplusrp2040]
extends = pico
board = sparkfun_thingplusrp2040

[env:upesy_rp2040_devkit]
extends = pico
board = upesy_rp2040_devkit

[env:seeed_xiao_rp2040]
extends = pico
board = seeed_xiao_rp2040
build_flags = 
	-DNUM_ANALOG_INPUTS=4
	${pico.build_flags}

[env:vccgnd_yd_rp2040]
extends = pico
board = vccgnd_yd_rp2040

[env:viyalab_mizu]
extends = pico
board = viyalab_mizu

[env:waveshare_rp2040_zero]
extends = pico
board = waveshare_rp2040_zero

[env:waveshare_rp2040_one]
extends = pico
board = waveshare_rp2040_one

[env:waveshare_rp2040_plus_4mb]
extends = pico
board = waveshare_rp2040_plus_4mb

[env:waveshare_rp2040_plus_16mb]
extends = pico
board = waveshare_rp2040_plus_16mb

[env:waveshare_rp2040_lcd_0_96]
extends = pico
board = waveshare_rp2040_lcd_0_96

[env:waveshare_rp2040_lcd_1_28]
extends = pico
board = waveshare_rp2040_lcd_1_28

[env:wiznet_5100s_evb_pico]
extends = pico
board = wiznet_5100s_evb_pico

[env:wiznet_wizfi360_evb_pico]
extends = pico
board = wiznet_wizfi360_evb_pico

[env:wiznet_5500_evb_pico]
extends = pico
board = wiznet_5500_evb_pico

[esp32]
platform = espressif32
framework = arduino
monitor_speed = 115200
platform_packages =
  	espressif/toolchain-riscv32-esp@file://pio_packages/empty
build_flags = 
	-Isrc/esp32 
	-D RF_ONLY
lib_ignore =
	Wire
build_src_filter = 
	+<esp32>
	+<shared>
lib_deps = 
	nrf24/RF24@1.4.5
	felis/USB-Host-Shield-20 @ ^1.6.0
	SPI
	NimBLE-Arduino

[env:esp-wrover-kit]
extends = esp32
board = esp-wrover-kit

[env:esp-dev]
extends = esp32
board = esp32dev

; To make our lives easier, we treat the teensy 2 and 2++ as if they are arduino micros, but then use the proper teensy loader
[env:teensy2]
extends = micro
platform_packages = 
	${micro.platform_packages}
	tool-teensy
upload_protocol = custom
board_upload.detect_frequency = false
board_upload.ardwiino_bootloader_teensy = true
upload_command  = 
	${platformio.packages_dir}/tool-teensy/teensy_reboot -s 
	${platformio.packages_dir}/tool-teensy/teensy_loader_cli -mmcu=${BOARD_MCU} -w -s -v $SOURCE

[env:teensy2pp]
build_flags = ${micro.build_flags} -DCORE_TEENSY
extends = env:teensy2
board_build.mcu = at90usb1286

; [teensy]
; platform = teensy
; framework = arduino
; build_src_filter = 
; 	+<teensy>
; 	+<shared>
; lib_ignore =
; 	Wire
; lib_deps = 
; 	nrf24/RF24@1.4.5
; 	felis/USB-Host-Shield-20 @ ^1.6.0
; 	USBHost_t36

; [teensy3]
; extends = teensy
; lib_deps = 
; 	${env.lib_deps}
; 	felis/USB-Host-Shield-20 @ ^1.6.0
; 	xxxajk/SPI4Teensy3 @ 0.0.0-alpha+sha.70a236042a

; [env:teensy3]
; extends = teensy3
; board = teensy30

; [env:teensy31]
; extends = teensy3
; board = teensy31

; [env:teensy35]
; extends = teensy3
; board = teensy35

; [env:teensy36]
; extends = teensy3
; board = teensy36

; [env:teensylc]
; extends = teensy3
; board = teensylc

; [env:teensy40]
; extends = teensy
; board = teensy40

; [env:teensy41]
; extends = teensy
; board = teensy41
