#pragma once
#ifdef __cplusplus
extern "C" {
#endif
#include <stdbool.h>
#include <stdint.h>

#include "defines.h"
#if __has_include("config_data.h")
#include "config_data.h"
#else

#define CONSOLE_TYPE UNIVERSAL //This can either be UNIVERSAL;MIDI;KEYBOARD_MOUSE
#define DEVICE_TYPE GUITAR
#define RHYTHM_TYPE GUITAR_HERO
#define POLL_RATE 1
#define WINDOWS_USES_XINPUT true

#define LED_TYPE LEDS_DISABLED

#define TILT_ENABLED false

#define RF_ENABLED false
#define RF_ID 0

#define LED_COUNT 0

#define DIGITAL_COUNT 1
#define ADC_COUNT 1
#define ADC_PINS {}

#define PIN_INIT {}

#define TICK_PS3 {}

#define KV_KEY_1 {}
#define KV_KEY_2 {}

#define TICK_XINPUT {}

#define TICK_SHARED {}

#define ARDWIINO_BOARD ""

// Serialise whatever configuration structure we use on the GUI side, so that we can pull it back
#define CONFIGURATION {0}
#define CONFIGURATION_LEN 1

// #define TWI_0_SDA 0
// #define TWI_0_SCL 1
// #define TWI_0_FREQ 400000L
// #define TWI_1_SDA 2
// #define TWI_1_SCL 2
// #define TWI_1_FREQ 400000L

// #define PS2_ACK 0
// #define PS2_ATT 0
// #define RF_IRQ 0
// #define RF_WAKEUP 1

// #define SPI_0_MOSI 0
// #define SPI_0_MISO 1
// #define SPI_0_SCK 1
// #define SPI_0_CPOL 1
// #define SPI_0_CPHA 1
// #define SPI_0_MSBFIRST 0
// #define SPI_0_CLOCK 100000L

// #define SPI_1_MOSI 0
// #define SPI_1_MISO 1
// #define SPI_1_SCK 1
// #define SPI_1_CPOL 1
// #define SPI_1_CPHA 1
// #define SPI_1_MSBFIRST 0
// #define SPI_1_CLOCK 100000L
#endif

// ConsoleType can change due to console detection
extern uint8_t consoleType;
extern const uint8_t config[CONFIGURATION_LEN];
#ifdef __cplusplus
}
#endif
#include "defines.h"
#include "reports/controller_reports.h"
#if DEVICE_TYPE == LIVE_GUITAR
#define DEVICE_TYPE_IS_LIVE_GUITAR true
#else
#define DEVICE_TYPE_IS_LIVE_GUITAR false
#endif
#if DEVICE_TYPE == GUITAR || DEVICE_TYPE == LIVE_GUITAR
#define DEVICE_TYPE_IS_GUITAR true
#define DEVICE_TYPE_IS_DRUM false
#elif DEVICE_TYPE == DRUMS
#define DEVICE_TYPE_IS_GUITAR false
#define DEVICE_TYPE_IS_DRUM true
#else
#define DEVICE_TYPE_IS_GUITAR false
#define DEVICE_TYPE_IS_DRUM false
#endif
#if DEVICE_TYPE == GUITAR || DEVICE_TYPE == DRUMS
    #if RHYTHM_TYPE == GUITAR_HERO
        #define PS3_ID 0x06
    #elif RHYTHM_TYPE == ROCK_BAND
        #define PS3_ID 0x00
    #endif
#else
    #define PS3_ID 0x07
#endif
#if DEVICE_TYPE == GAMEPAD
#define SUB_TYPE XINPUT_GAMEPAD
#define XINPUT_FLAGS 0x10
#define XINPUT_REPORT XInputGamepad_Data_t
#define XBOX_ONE_REPORT XboxOneGamepad_Data_t
#define PS3_REPORT PS3Gamepad_Data_t
#elif DEVICE_TYPE == WHEEL
#define SUB_TYPE XINPUT_WHEEL
#define XINPUT_FLAGS 0x10
#define XINPUT_REPORT XInputGamepad_Data_t
#define XBOX_ONE_REPORT XboxOneGamepad_Data_t
#define PS3_REPORT PS3Gamepad_Data_t
#elif DEVICE_TYPE == ARCADE_STICK
#define SUB_TYPE XINPUT_ARCADE_STICK
#define XINPUT_REPORT XInputGamepad_Data_t
#define XBOX_ONE_REPORT XboxOneGamepad_Data_t
#define PS3_REPORT PS3Gamepad_Data_t
#elif DEVICE_TYPE == GUITAR && RHYTHM_TYPE == GUITAR_HERO
#define SUB_TYPE XINPUT_GUITAR_ALTERNATE
#define PS3_TYPE PS3_GH_GUITAR_PID
#define WII_TYPE WII_RB_GUITAR_PID
#define XINPUT_FLAGS 0x10
#define XINPUT_REPORT XInputGuitarHeroGuitar_Data_t
#define XBOX_ONE_REPORT XboxOneRockBandGuitar_Data_t
#define PS3_REPORT PS3GuitarHeroGuitar_Data_t
#elif DEVICE_TYPE == GUITAR && RHYTHM_TYPE == ROCK_BAND
#define SUB_TYPE XINPUT_GUITAR_ALTERNATE
#define PS3_TYPE PS3_RB_GUITAR_PID
#define WII_TYPE WII_RB_GUITAR_PID
#define XINPUT_FLAGS 0x10
#define XINPUT_REPORT XInputRockBandGuitar_Data_t
#define XBOX_ONE_REPORT XboxOneRockBandGuitar_Data_t
#define PS3_REPORT PS3RockBandGuitar_Data_t
#elif DEVICE_TYPE == LIVE_GUITAR
#define SUB_TYPE XINPUT_GUITAR_ALTERNATE
#define PS3_TYPE PS3WIIU_GHLIVE_DONGLE_PID
#define XINPUT_FLAGS 0x00
#define XINPUT_REPORT XInputGHLGuitar_Data_t
#define XBOX_ONE_REPORT XboxOneGamepad_Data_t
#define PS3_REPORT PS3GHLGuitar_Data_t
#elif DEVICE_TYPE == DRUMS && RHYTHM_TYPE == GUITAR_HERO
#define SUB_TYPE XINPUT_DRUMS
#define PS3_TYPE PS3_GH_DRUM_PID
#define WII_TYPE WII_RB_DRUM_PID
#define XINPUT_FLAGS 0x10
#define XINPUT_REPORT XInputGuitarHeroDrums_Data_t
#define XBOX_ONE_REPORT XboxOneRockBandDrums_Data_t
#define PS3_REPORT PS3GuitarHeroDrums_Data_t
#elif DEVICE_TYPE == DRUMS && RHYTHM_TYPE == ROCK_BAND
#define SUB_TYPE XINPUT_DRUMS
#define PS3_TYPE PS3_RB_DRUM_PID
#define WII_TYPE WII_RB_DRUM_PID
#define XINPUT_FLAGS 0x10
#define XINPUT_REPORT XInputRockBandDrums_Data_t
#define XBOX_ONE_REPORT XboxOneRockBandDrums_Data_t
#define PS3_REPORT PS3RockBandDrums_Data_t
#elif DEVICE_TYPE == FLIGHT_STICK
#define SUB_TYPE XINPUT_FLIGHT_STICK
#define XINPUT_FLAGS 0x10
#define XINPUT_REPORT XInputGamepad_Data_t
#define XBOX_ONE_REPORT XboxOneGamepad_Data_t
#define PS3_REPORT PS3Gamepad_Data_t
#elif DEVICE_TYPE == DANCE_PAD
#define SUB_TYPE XINPUT_DANCE_PAD
#define XINPUT_FLAGS 0x10
#define XINPUT_REPORT XInputGamepad_Data_t
#define XBOX_ONE_REPORT XboxOneGamepad_Data_t
#define PS3_REPORT PS3Gamepad_Data_t
#elif DEVICE_TYPE == ARCADE_PAD
#define SUB_TYPE XINPUT_ARCADE_PAD
#define XINPUT_FLAGS 0x10
#define XINPUT_REPORT XInputGamepad_Data_t
#define XBOX_ONE_REPORT XboxOneGamepad_Data_t
#define PS3_REPORT PS3Gamepad_Data_t
#elif DEVICE_TYPE == STAGE_KIT
#define SUB_TYPE XINPUT_STAGE_KIT
#define XINPUT_FLAGS 0x00
#define XINPUT_REPORT XInputGamepad_Data_t
#define XBOX_ONE_REPORT XboxOneGamepad_Data_t
#define PS3_REPORT PS3Gamepad_Data_t
#elif DEVICE_TYPE == DJ_HERO_TURNTABLE
#define SUB_TYPE XINPUT_TURNTABLE
#define PS3_TYPE PS3_DJ_TURNTABLE_PID
#define XINPUT_FLAGS 0x00
#define XINPUT_REPORT XInputTurntable_Data_t
#define XBOX_ONE_REPORT XboxOneTurntable_Data_t
#define PS3_REPORT PS3Turntable_Data_t
#endif
// Xbox One Controller config
#define TEMP 0xFF
#if DEVICE_TYPE == GUITAR
#define XBOX_ONE_VID XBOX_ONE_RB_GUITAR_VID
#define XBOX_ONE_PID XBOX_ONE_RB_GUITAR_PID
const uint8_t announce[] = {0x02, 0x20, 0x01, 0x1c, TEMP, TEMP, TEMP, TEMP, TEMP, TEMP, 0x00, 0x00, 0x38, 0x07, 0x61, 0x41, 0x01, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00};
const uint8_t identify_1[] = {0x04, 0xf0, 0x01, 0x3a, 0xe5, 0x01, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe5, 0x00, 0xa6, 0x00, 0x16, 0x00, 0x1b, 0x00, 0x1c, 0x00, 0x23, 0x00, 0x29, 0x00, 0x75, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x06, 0x01, 0x02, 0x03, 0x04, 0x06, 0x07, 0x05, 0x01, 0x04, 0x05, 0x06, 0x0a, 0x02};
const uint8_t identify_2[] = {0x04, 0xa0, 0x01, 0xba, 0x00, 0x3a, 0x20, 0x00, 0x4d, 0x61, 0x64, 0x43, 0x61, 0x74, 0x7a, 0x2e, 0x58, 0x62, 0x6f, 0x78, 0x2e, 0x47, 0x75, 0x69, 0x74, 0x61, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x27, 0x00, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x2e, 0x58, 0x62, 0x6f, 0x78, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x4e, 0x61, 0x76};
const uint8_t identify_3[] = {0x04, 0xa0, 0x01, 0xba, 0x00, 0x74, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x03, 0x38, 0xe4, 0x2a, 0x0d, 0x7d, 0x7f, 0x33, 0x49, 0x86, 0x93, 0x30, 0xfc, 0x55, 0x01, 0x8e, 0x77, 0xe7, 0x1f, 0xf3, 0xb8, 0x86, 0x73, 0xe9, 0x40, 0xa9, 0xf8, 0x2f, 0x21, 0x26, 0x3a, 0xcf, 0xb7, 0x56, 0xff, 0x76, 0x97, 0xfd, 0x9b, 0x81, 0x45};
const uint8_t identify_4[] = {0x04, 0xb0, 0x01, 0x37, 0xae, 0x01, 0xad, 0x45, 0xb6, 0x45, 0xbb, 0xa5, 0x26, 0xd6, 0x02, 0x17, 0x00, 0x20, 0x0e, 0x00, 0x01, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x21, 0x05, 0x00, 0x01, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
const uint8_t identify_5[] = {0x04, 0xa0, 0x01, 0x00, 0xe5, 0x01, 0x00, 0x00};
#elif DEVICE_TYPE == DRUMS
#define XBOX_ONE_VID XBOX_ONE_RB_DRUM_VID
#define XBOX_ONE_PID XBOX_ONE_RB_DRUM_PID
const uint8_t announce[] = {0x02, 0x20, 0x01, 0x1c, TEMP, TEMP, TEMP, TEMP, TEMP, TEMP, 0x00, 0x00, 0x38, 0x07, 0x62, 0x42, 0x01, 0x00, 0x00, 0x00, 0xe6, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00};
const uint8_t identify_1[] = {0x04, 0xf0, 0x01, 0x3a, 0xc5, 0x01, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x9d, 0x00, 0x16, 0x00, 0x1b, 0x00, 0x1c, 0x00, 0x23, 0x00, 0x29, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x06, 0x01, 0x02, 0x03, 0x04, 0x06, 0x07, 0x05, 0x01, 0x04, 0x05, 0x06, 0x0a, 0x02};
const uint8_t identify_2[] = {0x04, 0xa0, 0x01, 0xba, 0x00, 0x3a, 0x17, 0x00, 0x4d, 0x61, 0x64, 0x43, 0x61, 0x74, 0x7a, 0x2e, 0x58, 0x62, 0x6f, 0x78, 0x2e, 0x44, 0x72, 0x75, 0x6d, 0x73, 0x2e, 0x47, 0x6c, 0x61, 0x6d, 0x27, 0x00, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x2e, 0x58, 0x62, 0x6f, 0x78, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f};
const uint8_t identify_3[] = {0x04, 0xa0, 0x01, 0xba, 0x00, 0x74, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x03, 0x93, 0x28, 0x18, 0x06, 0xe0, 0xcc, 0x85, 0x4b, 0x92, 0x71, 0x0a, 0x10, 0xdb, 0xab, 0x7e, 0x07, 0xe7, 0x1f, 0xf3, 0xb8, 0x86, 0x73, 0xe9, 0x40, 0xa9, 0xf8, 0x2f, 0x21, 0x26, 0x3a, 0xcf, 0xb7, 0x56, 0xff, 0x76, 0x97, 0xfd, 0x9b, 0x81, 0x45, 0xad, 0x45, 0xb6, 0x45, 0xbb, 0xa5, 0x26, 0xd6, 0x01};
const uint8_t identify_4[] = {0x04, 0xb0, 0x01, 0x17, 0xae, 0x01, 0x17, 0x00, 0x20, 0x0a, 0x00, 0x01, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
const uint8_t identify_5[] = {0x04, 0xa0, 0x01, 0x00, 0xc5, 0x01, 0x00, 0x00};
#elif DEVICE_TYPE == LIVE_GUITAR
#define XBOX_ONE_VID XBOX_ONE_GHLIVE_DONGLE_VID
#define XBOX_ONE_PID XBOX_ONE_GHLIVE_DONGLE_PID
const uint8_t announce[] = {0x02, 0x20, 0x01, 0x1C, TEMP, TEMP, TEMP, TEMP, TEMP, TEMP, 0x00, 0x00, 0x30, 0x14, 0x9B, 0x07, 0x01, 0x00, 0x00, 0x00, 0x10, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00};
const uint8_t identify_1[] = {0x04, 0xF0, 0x01, 0x3A, 0xA5, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x01, 0xCF, 0x00, 0x16, 0x00, 0x1F, 0x00, 0x20, 0x00, 0x27, 0x00, 0x2D, 0x00, 0x8E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x06, 0x01, 0x02, 0x03, 0x04, 0x06, 0x07, 0x05, 0x01, 0x04};
const uint8_t identify_2[] = {0x04, 0xA0, 0x01, 0xBA, 0x00, 0x3A, 0x05, 0x06, 0x0A, 0x03, 0x19, 0x00, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6F, 0x6E, 0x2E, 0x58, 0x62, 0x6F, 0x78, 0x2E, 0x49, 0x6E, 0x70, 0x75, 0x74, 0x2E, 0x47, 0x48, 0x37, 0x1A, 0x00, 0x57, 0x69, 0x6E, 0x64, 0x6F, 0x77, 0x73, 0x2E, 0x58, 0x62, 0x6F, 0x78, 0x2E, 0x49, 0x6E, 0x70, 0x75, 0x74, 0x2E, 0x47, 0x61, 0x6D, 0x65, 0x70, 0x61};
const uint8_t identify_3[] = {0x04, 0xA0, 0x01, 0xBA, 0x00, 0x74, 0x64, 0x27, 0x00, 0x57, 0x69, 0x6E, 0x64, 0x6F, 0x77, 0x73, 0x2E, 0x58, 0x62, 0x6F, 0x78, 0x2E, 0x49, 0x6E, 0x70, 0x75, 0x74, 0x2E, 0x4E, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x43, 0x6F, 0x6E, 0x74, 0x72, 0x6F, 0x6C, 0x6C, 0x65, 0x72, 0x04, 0xD9, 0xFD, 0x12, 0xFD, 0x73, 0x8E, 0xC7, 0x47, 0xA2, 0x31, 0x96, 0x26, 0x8C, 0x38, 0x00};
const uint8_t identify_4[] = {0x04, 0xA0, 0x01, 0x3A, 0xAE, 0x01, 0x9A, 0x2C, 0x40, 0x2E, 0x08, 0xDF, 0x07, 0xE1, 0x45, 0xA5, 0xAB, 0xA3, 0x12, 0x7A, 0xF1, 0x97, 0xB5, 0xE7, 0x1F, 0xF3, 0xB8, 0x86, 0x73, 0xE9, 0x40, 0xA9, 0xF8, 0x2F, 0x21, 0x26, 0x3A, 0xCF, 0xB7, 0x56, 0xFF, 0x76, 0x97, 0xFD, 0x9B, 0x81, 0x45, 0xAD, 0x45, 0xB6, 0x45, 0xBB, 0xA5, 0x26, 0xD6, 0x03, 0x17, 0x00, 0x20, 0x0E, 0x00, 0x01, 0x00, 0x10};
const uint8_t identify_5[] = {0x04, 0xA0, 0x01, 0x3A, 0xE8, 0x01, 0x00, 0x00};
#else  // Gamepad
const uint8_t announce[] = {0x02, 0x20, 0x01, 0x1c, TEMP, TEMP, TEMP, TEMP, TEMP, TEMP, 0x00, 0x00, 0x5e, 0x04, 0xdd, 0x02, 0x02, 0x00, 0x03, 0x00, 0x51, 0x09, 0x00, 0x00, 0x02, 0x01, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00};
const uint8_t identify_1[] = {0x04, 0xf0, 0x01, 0x3a, 0xd6, 0x01, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd6, 0x00, 0x97, 0x00, 0x16, 0x00, 0x37, 0x00, 0x38, 0x00, 0x41, 0x00, 0x49, 0x00, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x03, 0x00, 0x02, 0x00, 0x00};
const uint8_t identify_2[] = {0x04, 0xa0, 0x01, 0xba, 0x00, 0x3a, 0x00, 0x02, 0x00, 0x01, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x08, 0x01, 0x02, 0x03, 0x04, 0x06, 0x07, 0x0c, 0x1e, 0x07, 0x01, 0x04, 0x05, 0x06, 0x0a, 0x0c, 0x1e, 0x01, 0x1a, 0x00, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x2e, 0x58, 0x62, 0x6f, 0x78, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x70};
const uint8_t identify_3[] = {0x04, 0xa0, 0x01, 0xba, 0x00, 0x74, 0x61, 0x64, 0x03, 0x56, 0xff, 0x76, 0x97, 0xfd, 0x9b, 0x81, 0x45, 0xad, 0x45, 0xb6, 0x45, 0xbb, 0xa5, 0x26, 0xd6, 0x2c, 0x40, 0x2e, 0x08, 0xdf, 0x07, 0xe1, 0x45, 0xa5, 0xab, 0xa3, 0x12, 0x7a, 0xf1, 0x97, 0xb5, 0xe7, 0x1f, 0xf3, 0xb8, 0x86, 0x73, 0xe9, 0x40, 0xa9, 0xf8, 0x2f, 0x21, 0x26, 0x3a, 0xcf, 0xb7, 0x02, 0x17, 0x00, 0x20, 0x0e, 0x00, 0x01};
const uint8_t identify_4[] = {0x04, 0xb0, 0x01, 0x28, 0xae, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x09, 0x3c, 0x00, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
const uint8_t identify_5[] = {0x04, 0xa0, 0x01, 0x00, 0xd6, 0x01, 0x00, 0x00};
#endif
#define SUPPORTS_KEYBOARD CONSOLE_TYPE == KEYBOARD_MOUSE
#define SUPPORTS_LEDS LED_TYPE == LEDS_APA102 || LED_TYPE == LEDS_WS2812
#define SUPPORTS_MIDI CONSOLE_TYPE == MIDI
#define SUPPORTS_HID CONSOLE_TYPE != MIDI
#define SUPPORTS_PICO defined(ARDUINO_ARCH_RP2040)
#define SUPPORTS_AVR defined(__AVR__)
#define SUPPORTS_TEENSY defined(__arm__) && defined(CORE_TEENSY)
